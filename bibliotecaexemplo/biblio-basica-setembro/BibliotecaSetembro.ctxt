#BlueJ class context
comment0.target=BibliotecaSetembro
comment0.text=\r\n\r\n\ aqui\ coloquem\ lista\ de\ metodos\ construidos\r\n\ ao\ longo\ do\ semestre\ -\ versao\ acumulada\ Agosto/Setembro\r\n\ \r\n
comment1.params=lado
comment1.target=double\ areaQuadrado(double)
comment1.text=\r\n\ \r\n\ public\ static\ int\ quantDiv\ (int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ a\ quantidade\ de\ divisores\ do\ numero\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ int\ quantDivP\ (int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ a\ quantidade\ de\ divisores\ proprios\ do\ numero\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ int\ somaDiv\ (int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ a\ soma\ dos\ divisores\ do\ numero\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ int\ somaDivP\ (int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ a\ soma\ dos\ divisores\ proprios\ do\ numero\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ primo\ (int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ for\ primo\ e\ false\ se\ nao\ for\ primo\ \r\n\ \ \ \ \ \ \ \ //\ usando\ chamada\ de\ metodo\ existente\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ primo2\ (int\ valor\ )\r\n\ \ \ \ {\ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ for\ primo\ e\ false\ se\ nao\ for\ primo\ \r\n\ \ \ \ \ \ \ \ //\ sem\ usar\ chamada\ de\ metodo\ existente\ ...testes\ encadeados\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ perfeito(int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ for\ perfeito\ e\ false\ se\ nao\ for\ perfeito\ \r\n\ \ \ \ \ \ \ \ //\ usando\ chamada\ de\ metodo\ existente\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ abundante(int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ for\ abundante\ e\ false\ se\ nao\ for\ abundante\ \r\n\ \ \ \ \ \ \ \ //\ usando\ chamada\ de\ metodo\ existente\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ defectivo(int\ valor\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ for\ defectivo\ e\ false\ se\ nao\ for\ defectivo\ \r\n\ \ \ \ \ \ \ \ //\ usando\ chamada\ de\ metodo\ existente\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ boolean\ amigos(int\ a,\ int\ b\ )\r\n\ \ \ \ {\ \ \ //recebe\ numero\ natural\ maio\ que\ zero\ e\ devolve\ true\ se\ os\ numeros\ forem\ amigos\ \ e\ false\ se\ nao\ forem\ amigos\r\n\ \ \ \ \ \ \ \ //\ usando\ chamada\ de\ metodo\ existente\ \r\n\ \ \ \ \ \ \ \ ....\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ public\ static\ int\ somaPA(int\ n,\ int\ a1,\ int\ an)\ \r\n\ {\ \r\n\ \ \ \ \ \ \ \ //enunciado\ do\ exercicio\ 9\ da\ lista\ de\ repeti\u00E7\u00E3o\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ }\u0000\ \ \r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ public\ static\ int\ somatorio\ (int\ a,\ int\ b,\ int\ c)\ \u0000\r\n\ {\ \r\n\ \ \ \ \ \ \ \ //enunciado\ do\ exercicio\ 10\ da\ lista\ de\ repeti\u00E7\u00E3o\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ }\u0000\ \ \r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ public\ static\ int\ produtorio\ (int\ a,\ int\ b)\ \u0000\r\n\ {\ \r\n\ \ \ \ \ \ \ \ //enunciado\ do\ exercicio\ 11\ da\ lista\ de\ repeti\u00E7\u00E3o\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ }\u0000\ \ \r\n\ \ \ \ \ \ \r\n\ interessante\ inserir\ metodos\ dos\ desafios\ e\ do\ programa\ SORRIA\r\n\ podem\ inserir\ na\ sua\ biblioteca\ metodos\ resultantes\ das\ suas\ construcoes\ de\ aula\ e\ estudos\ complementares\r\n\ lembrem-se\ metodos\ CRIADOS\ por\ voc\u00EAs\r\n\ codigos\ documentados\ \=]\ explicando\ como\ funcionam\ os\ metodos\ \r\n
comment10.params=raio\ altura
comment10.target=double\ superficieCilindro(double,\ double)
comment11.params=raio
comment11.target=double\ superficieEsfera(double)
comment12.params=a\ b\ c
comment12.target=int\ maiorDeTres1(int,\ int,\ int)
comment13.params=a\ b\ c
comment13.target=int\ maiorDeTres2(int,\ int,\ int)
comment14.params=a\ b\ c
comment14.target=int\ maiorDeTres3(int,\ int,\ int)
comment15.params=a\ b\ c
comment15.target=int\ maiorDeTres4(int,\ int,\ int)
comment16.params=numero
comment16.target=void\ capicua(int)
comment17.params=a\ b\ c
comment17.target=void\ tipoTriangulo(int,\ int,\ int)
comment2.params=lado1\ lado2
comment2.target=double\ areaRetangulo(double,\ double)
comment3.params=raio
comment3.target=double\ areaCirculo(double)
comment4.params=base\ altura
comment4.target=double\ areaTriangulo(double,\ double)
comment5.params=lado1\ lado2\ lado3
comment5.target=double\ volumeParalelepipedo(double,\ double,\ double)
comment6.params=ladobase1\ ladobase2\ altura
comment6.target=double\ volumePiramide(double,\ double,\ double)
comment7.params=raio\ altura
comment7.target=double\ volumeCilindro(double,\ double)
comment8.params=raio
comment8.target=double\ volumeEsfera(double)
comment9.params=lado1\ lado2\ lado3
comment9.target=double\ superficieParalelepipedo(double,\ double,\ double)
numComments=18
